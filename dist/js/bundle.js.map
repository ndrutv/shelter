{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAuC;AACA;AACJ;AACnC;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAM;AACV,iBAAiB,2DAAM;AACvB,eAAe,yDAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC9DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY;AACjF,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,+DAAe,MAAM;;;;;;;;;;;;;ACvDa;AACgC;AAClE;AACA;AACA,gBAAgB;AAChB;AACA,2BAA2B,sBAAsB;AACjD,6CAA6C,qBAAqB;AAClE,6BAA6B,qBAAqB;AAClD;AACA,UAAU,eAAe;AACzB;AACA,+CAA+C,sDAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,YAAY,SAAS,aAAa;AAC/E,uCAAuC,aAAa;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,mDAAU;AACd,IAAI,kDAAU;AACd;AACA;AACA;AACA,uBAAuB,qDAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,+DAAe,IAAI;;;;;;;;;;;AC9EnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kDAAkD;AAC9E,4BAA4B,iBAAiB;AAC7C;AACA;AACA,4CAA4C,iBAAiB;AAC7D,+CAA+C,kBAAkB,KAAK,kBAAkB;AACxF,mDAAmD,wBAAwB;AAC3E;AACA;AACA,iEAAiE;AACjE;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,sEAAsE;AACtE;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,YAAY;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+DAAe,KAAK;;;;;;;;;;;ACvEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAAe,OAAO;;;;;;;;;;;;;ACPY;AAC4B;AAC9D;AACA;AACA,yBAAyB,qDAAO;AAChC;AACA;AACA,2BAA2B,iDAAS;AACpC;AACA,iBAAiB,mDAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAW;AAC3C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT,KAAK;AACL;AACA;AACA,+DAAe,MAAM;;;;;;;;;;;;;;;;;;;ACrDQ;AAC7B;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK;AACjB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc,SAAS,eAAe;AAClF,uCAAuC,eAAe;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAa;AACtB,SAAS;AACT;AACA;AACA;;;;;;;UC1DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://shelter/./src/js/index.js","webpack://shelter/./src/js/modules/_burger.js","webpack://shelter/./src/js/modules/_list.js","webpack://shelter/./src/js/modules/_modal.js","webpack://shelter/./src/js/modules/_services.js","webpack://shelter/./src/js/modules/_slider.js","webpack://shelter/./src/js/modules/_utils.js","webpack://shelter/webpack/bootstrap","webpack://shelter/webpack/runtime/define property getters","webpack://shelter/webpack/runtime/hasOwnProperty shorthand","webpack://shelter/webpack/runtime/make namespace object","webpack://shelter/webpack/before-startup","webpack://shelter/webpack/startup","webpack://shelter/webpack/after-startup"],"sourcesContent":["import burger from \"./modules/_burger\";\r\nimport slider from \"./modules/_slider\";\r\nimport list from \"./modules/_list\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const petsSlider = document.querySelector('.slider');\r\n    const petsList = document.querySelector('.pets__list');\r\n    \r\n    burger();\r\n    petsSlider ? slider() : null;\r\n    petsList ? list() : null;\r\n\r\n    console.log('Реализация burger menu на обеих страницах');\r\n    console.log('- (2/2) при ширине страницы меньше 768рх панель навигации скрывается, появляется бургер-иконка');\r\n    console.log('- (4/4) при нажатии на бургер-иконку, справа плавно появляется адаптивное меню шириной 320px, бургер-иконка плавно поворачивается на 90 градусов');\r\n    console.log('- (2/2) высота адаптивного меню занимает всю высоту экрана');\r\n    console.log('- (4/4) при повторном нажатии на бургер-иконку или на свободное от бургер-меню пространство адаптивное меню плавно скрывается уезжая за правую часть экрана, бургер-иконка плавно поворачивается на 90 градусов обратно');\r\n    console.log('- (2/2) бургер-иконка создана при помощи html+css, без использования изображений');\r\n    console.log('- (2/2) ссылки в адаптивном меню работают, обеспечивая плавную прокрутку по якорям, сохраняются заданные на первом этапе выполнения задания требования интерактивности элементов меню');\r\n    console.log('- (2/2) при клике по любой ссылке (интерактивной или неинтерактивной) в меню адаптивное меню плавно скрывается вправо, бургер-иконка поворачивается на 90 градусов обратно');\r\n    console.log('- (2/2) расположение и размеры элементов в бургер-меню соответствует макету (центрирование по вертикали и горизонтали элементов меню, расположение иконки). При этом на странице Pets цветовая схема может быть как темная, так и светлая');\r\n    console.log('- (2/2) область, свободная от бургер-меню, затемняется');\r\n    console.log('- (4/4) страница под бургер-меню не прокручивается');\r\n    \r\n    console.log('Реализация слайдера-карусели на странице \"Main\"');\r\n    console.log('- (4/4) при нажатии на стрелки происходит переход к новому блоку элементов');\r\n    console.log('- (0/4) смена блоков происходит с соответствующей анимацией карусели (способ выполнения анимации не проверяется)');\r\n    console.log('- (4/4) слайдер бесконечен, т.е. можно бесконечно много нажимать влево или вправо, и каждый раз будет прокрутка в эту сторону с новым набором карточек');\r\n    console.log('- (4/4) при переключении влево или вправо прокручивается ровно столько карточек, сколько показывается при текущей ширине экрана (3 для 1280px, 2 для 768px, 1 для 320px)');\r\n\r\n    console.log('Каждый новый слайд содержит псевдослучайный набор карточек животных, т.е. формируется из исходных объектов в случайном порядке со следующими условиями:');\r\n    console.log('- (4/4) в текущем блоке слайда карточки с питомцами не повторяются');\r\n    console.log('- (0/4) в следующем блоке нет дублирования карточек с текущим блоком. Например в слайдере из 3 элементов, следующий выезжающий слайд будет содержать 3 (из 8 доступных) новых карточки питомца, таких, каких не было среди 3х карточек на предыдущем уехавшем слайде');\r\n    console.log('- (4/4) сохраняется только одно предыдущее состояние. Т.е. при последовательном переходе два раза влево, а потом два раза вправо, мы получим набор карточек, отличный от исходного');\r\n    console.log('- (2/2) при каждой перезагрузке страницы формируется новая последовательность карточек');\r\n    console.log('- (2/2) генерация наборов карточек происходит на основе 8 объектов с данными о животными');\r\n    console.log('- (4/4) при изменении ширины экрана (от 1280px до 320px и обратно), слайдер перестраивается и работает без перезагрузки страницы (набор карточек при этом может как изменяться, так и оставаться тем же, скрывая лишнюю или добавляя недостающую, и сохраняя при этом описанные для слайдера требования)');\r\n\r\n    console.log('Реализация пагинации на странице \"Pets\"');\r\n    console.log('- (2/2) при перезагрузке страницы всегда открывается первая страница пагинации');\r\n    console.log('- (2/2) при нажатии кнопок \">\" или \"<\" открывается следующая или предыдущая страница пагинации соответственно');\r\n    console.log('- (2/2) при нажатии кнопок \">>\" или \"<<\" открывается последняя или первая страница пагинации соответственно');\r\n    console.log('- (2/2) при открытии первой страницы кнопки \"<<\" и \"<\" неактивны');\r\n    console.log('- (2/2) при открытии последней страницы кнопки \">\" и \">>\" неактивны');\r\n    console.log('- (2/2) в кружке по центру указан номер текущей страницы. При переключении страниц номер меняется на актуальный');\r\n\r\n    console.log('Каждая страница пагинации содержит псевдослучайный набор питомцев, т.е. формируется из исходных объектов в случайном порядке со следующими условиями');\r\n    console.log('- (4/4) при загрузке страницы формируется массив из 48 объектов питомцев. Каждый из 8 питомцев должен встречаться ровно 6 раз');\r\n    console.log('- (4/4) при каждой перезагрузке страницы формируется новый массив со случайной последовательностью');\r\n    console.log('- (4/4) карточки питомцев не должны повторяться на одной странице');\r\n    console.log('- (4/4) при переключении страницы данные меняются (для >1280px меняется порядок карточек, для остальных - меняется набор и порядок карточек)');\r\n    console.log('- (2/2) при неизменных размерах области пагинации, в том числе размерах окна браузера, и без перезагрузки страницы, возвращаясь на страницу под определенным номером, контент на ней всегда будет одинаков. Т.е. карточки питомцев будут в том же расположении, что и были до перехода на другие страницы');\r\n    console.log('- (2/2) общее количество страниц при ширине экрана 1280px - 6, при 768px - 8, при 320px - 16 страниц');\r\n    console.log('- (0/4) при изменении ширины экрана (от 1280px до 320px и обратно), пагинация перестраивается и работает без перезагрузки страницы (страница может оставаться той же или переключаться, при этом сформированный массив - общая последовательность карточек - не обновляется, сохраняются все остальные требования к пагинации)');\r\n\r\n    console.log('Реализация попап на обеих страницах');\r\n    console.log('- (2/2) попап появляется при нажатии на любое место карточки с описанием конкретного животного');\r\n    console.log('- (2/2) часть страницы вне попапа затемняется');\r\n    console.log('- (2/2) при открытии попапа вертикальный скролл страницы становится неактивным, при закрытии - снова активным');\r\n    console.log('- (2/2) при нажатии на область вокруг попапа или на кнопку с крестиком попап закрывается, при этом при нажатии на сам попап ничего не происходит');\r\n    console.log('- (2/2) кнопка с крестиком интерактивная');\r\n    console.log('- (2/2) окно попапа (не считая кнопку с крестиком) центрировано по всем осям, размеры элементов попапа и их расположение совпадают с макетом');\r\n})","const burger = () => {\r\n    const navList = document.querySelector('.nav__list');\r\n    const navItem = document.querySelectorAll('.nav__item');\r\n    const navBurger = document.querySelector('.nav__burger');\r\n    const navOverlay = document.querySelector('.overlay');\r\n    const scrollWidth = window.screen.width - document.body.clientWidth;\r\n\r\n    const hideMenu = () => {\r\n        navOverlay.classList.remove('overlay_active');\r\n        navBurger.classList.remove('nav__burger_active');\r\n        navList.classList.remove('nav__list_active');\r\n        document.body.style = '';\r\n    }\r\n\r\n    const toggleMenu = () => {\r\n        navOverlay.classList.toggle('overlay_active');\r\n        navBurger.classList.toggle('nav__burger_active');\r\n        navList.classList.toggle('nav__list_active');\r\n\r\n        if ( !document.body.style.overflow ) {\r\n            document.body.style.overflow = 'hidden';\r\n            scrollWidth !== 0 ? document.body.style.marginRight = `${scrollWidth}px` : null;\r\n        } else {\r\n            document.body.style = '';\r\n        }\r\n    };\r\n\r\n    navBurger.addEventListener('click', () => {\r\n        toggleMenu();\r\n    });\r\n\r\n    navItem.forEach((e) => {\r\n        e.addEventListener('click', () => {\r\n            hideMenu();\r\n        });\r\n    });\r\n\r\n    navOverlay.addEventListener('click', (e) => {\r\n        if (e.target) {\r\n            toggleMenu();\r\n        }\r\n    })\r\n\r\n    // for ease check\r\n    // window.addEventListener('resize', () => {\r\n    //     if ( document.body.clientWidth >= 768 ) {\r\n    //         hideMenu();\r\n\r\n    //         if ( document.body.style.overflowY ) {\r\n    //             document.body.style = '';\r\n    //         }\r\n    //     }\r\n    // })\r\n}\r\n\r\nexport default burger;","import getData from './_services';\r\nimport { cardsModal, setAnimate, getRandomCards } from './_utils';\r\n\r\nconst getArr = (data, screen) => {\r\n    let num = { pages: 0, cards: 0 };\r\n\r\n    screen < 768 ? num = { pages: 16, cards: 3 } : null;\r\n    screen >= 768 && screen < 1200 ? num = { pages: 8, cards: 6 } : null;\r\n    screen >= 1200 ? num = { pages: 6, cards: 8 } : null;\r\n    \r\n    let { pages, cards } = num;\r\n\r\n    return new Array(pages).fill([]).map(() => getRandomCards(data, cards));\r\n}\r\n\r\nconst renderPage = (data, pets, page, place) => {\r\n    place.innerHTML = null;\r\n    \r\n    pets[page - 1].forEach((e) => {\r\n        const card = document.createElement('div')\r\n        card.className = 'card';\r\n        card.setAttribute('data-id', e);\r\n        card.innerHTML = `\r\n            <img class=\"card__image\" src=\".${data[e].img}\" alt=\"${data[e].name}\">\r\n            <div class=\"card__title\">${data[e].name}</div>\r\n            <button class=\"btn btn_secondary card__btn\">Learn more</button>\r\n        `\r\n        place.append(card);\r\n    })\r\n\r\n    setAnimate(place);\r\n    cardsModal(data);\r\n}\r\n\r\nconst list = async () => {\r\n    const data = await getData('../pets.json');\r\n    const petsList = document.querySelector('.pets__list');\r\n    const buttons = document.querySelectorAll('.btn_navigation');\r\n    const active = document.querySelector('.btn_navigation_active');\r\n    const screen = document.body.clientWidth;\r\n    const pets = getArr(data, screen);\r\n    let page = 1;\r\n\r\n    renderPage(data, pets, page, petsList);\r\n\r\n    const setDisable = (arr) => {\r\n        arr.forEach((e) => {\r\n            document.querySelector(`.${e}`).disabled = true;\r\n        })\r\n    }\r\n\r\n    const setActive = (arr) => {\r\n        arr.forEach((e) => {\r\n            document.querySelector(`.${e}`).disabled = false;\r\n        })\r\n    }\r\n\r\n    buttons.forEach((btn) => {\r\n        btn.addEventListener('click', (e) => {\r\n            const target = e.target.classList;\r\n            \r\n            target.contains('btn_navigation_first') ? page = 1 : null;\r\n            target.contains('btn_navigation_prev') ? page-- : null;\r\n            target.contains('btn_navigation_next') ? page++ : null;\r\n            target.contains('btn_navigation_last') ? page = pets.length : null;\r\n\r\n            page === 1 ? setDisable(['btn_navigation_first', 'btn_navigation_prev']) : null;\r\n            page === pets.length ? setDisable(['btn_navigation_next', 'btn_navigation_last']) : null;\r\n            page > 1 ? setActive(['btn_navigation_first', 'btn_navigation_prev']) : null;\r\n            page < pets.length ? setActive(['btn_navigation_next', 'btn_navigation_last']) : null;\r\n\r\n            active.textContent = page;\r\n\r\n            renderPage(data, pets, page, petsList);\r\n        })\r\n    })\r\n}\r\n\r\nexport default list;","const modal = async (slides, id) => {    \r\n    const slidesInoculations = slides[id].inoculations.join(', ');\r\n    const slidesDiseases = slides[id].diseases.join(', ');\r\n    const slidesParasites = slides[id].parasites.join(', ');\r\n    const petsList = document.querySelector('.pets__list');\r\n    const modal = document.createElement('div');\r\n    modal.className = 'modal';\r\n    modal.innerHTML = `\r\n        <div class=\"modal__inner\">\r\n            <div class=\"modal__image-container\">\r\n                <img class=\"modal__image\"\r\n                    src=\"${ petsList ? '.' + slides[id].img : slides[id].img }\"\r\n                    alt=\"${ slides[id].name }\">\r\n            </div>\r\n            <div class=\"modal__content\">\r\n                <h3 class=\"modal__title\">${ slides[id].name }</h3>\r\n                <h4 class=\"modal__subtitle\">${ slides[id].type } - ${ slides[id].breed }</h4>\r\n                <div class=\"modal__description\">${ slides[id].description }</div>\r\n                <ul class=\"modal__list\">\r\n                    <li class=\"modal__item\">\r\n                        <span class=\"modal__bold\">Age:</span> ${ slides[id].age }\r\n                    </li>\r\n                    <li class=\"modal__item\">\r\n                        <span class=\"modal__bold\">Inoculations:</span> ${ slidesInoculations }\r\n                    </li>\r\n                    <li class=\"modal__item\">\r\n                        <span class=\"modal__bold\">Diseases:</span> ${ slidesDiseases }\r\n                    </li>\r\n                    <li class=\"modal__item\">\r\n                        <span class=\"modal__bold\">Parasites:</span> ${ slidesParasites }\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"btn_rounded modal__close\">&times;</div>\r\n        </div>\r\n        `\r\n    document.body.append(modal);\r\n\r\n    const scrollWidth = window.screen.width - document.body.clientWidth;\r\n\r\n    if ( !document.body.style.overflow ) {\r\n        document.body.style.overflow = 'hidden';\r\n        document.body.style.position = 'relative';\r\n        scrollWidth !== 0 ? document.body.style.marginRight = `${scrollWidth}px` : null;\r\n    }\r\n\r\n    const overlay = document.querySelector('.overlay');\r\n    overlay.classList.add('overlay_active');\r\n\r\n    const close = () => {\r\n        overlay.classList.remove('overlay_active');\r\n        modal.remove();\r\n        document.body.style = '';\r\n    }\r\n\r\n    const modalClose = document.querySelector('.btn_rounded');\r\n    modalClose.addEventListener('click', () => {\r\n        close();\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape') { \r\n            close();\r\n        }\r\n    });\r\n\r\n    document.querySelector('.modal').addEventListener('click', (e) => {\r\n        e.target === e.currentTarget ? close() : null;\r\n    })\r\n}\r\n\r\nexport default modal;","const getData = async (url) => {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport default getData;","import getData from './_services';\r\nimport { renderCards, setSlides, setAnimate } from './_utils';\r\n\r\nconst slider = async () => {\r\n    const slides = await getData('./pets.json');\r\n    const sliderInner = document.querySelector('.slider__inner');\r\n    const sliderButtons = document.querySelectorAll('.slider__button');\r\n    const numberOfSlides = setSlides();\r\n    const state = {\r\n        current: renderCards(slides, numberOfSlides, sliderInner),\r\n        previous: [],\r\n        transition: [],\r\n        event: '',\r\n    }\r\n\r\n    sliderButtons.forEach((button) => {\r\n        button.addEventListener('click', () => {\r\n            const getClass = button.classList[1];\r\n \r\n            const empty = () => {\r\n                sliderInner.innerHTML = null;\r\n                state.event = getClass;\r\n                state.previous = state.current;\r\n                state.current = renderCards(slides, numberOfSlides, sliderInner);\r\n            }\r\n\r\n            const match = () => {\r\n                sliderInner.innerHTML = null;\r\n                state.previous = state.current;\r\n                state.current = renderCards(slides, numberOfSlides, sliderInner);\r\n            }\r\n\r\n            const change = () => {\r\n                sliderInner.innerHTML = null;\r\n                state.event = getClass;\r\n                state.transition = state.previous;\r\n                state.previous = state.current;\r\n                state.current = renderCards(slides, numberOfSlides, sliderInner, state.transition);\r\n            }\r\n\r\n            if ( !state.event ) {\r\n                empty();\r\n            } else if ( state.event === getClass ) {             \r\n                match();\r\n            } else {\r\n                change();\r\n            }\r\n\r\n            setAnimate(sliderInner);\r\n        })\r\n    })\r\n}\r\n\r\nexport default slider;","import modal from './_modal';\r\n\r\nconst getRandomCards = (data, count, arr = []) => {\r\n    do {\r\n        let num = Math.floor(Math.random() * data.length);\r\n        arr.indexOf(num) === -1 ? arr.push(num) : null;\r\n    } while (arr.length < count);\r\n\r\n    return arr;\r\n}\r\n\r\nconst cardsModal = (slides) => {\r\n    const cards = document.querySelectorAll('.card');\r\n    cards.forEach((e) => {\r\n        e.addEventListener('click', () => {\r\n            const id = e.getAttribute('data-id');\r\n            modal(slides, id);\r\n        })\r\n    })\r\n}\r\n\r\nconst renderCards = (slides, count, place, arr = []) => {\r\n    arr.length === 0 ? getRandomCards(slides, count, arr) : null;\r\n\r\n    arr.forEach((e) => {\r\n        const card = document.createElement('div')\r\n        card.className = 'card';\r\n        card.setAttribute('data-id', e);\r\n        card.innerHTML = `\r\n            <img class=\"card__image\" src=\"${slides[e].img}\" alt=\"${slides[e].name}\">\r\n            <div class=\"card__title\">${slides[e].name}</div>\r\n            <button class=\"btn btn_secondary card__btn\">Learn more</button>\r\n        `\r\n        place.append(card);\r\n    })\r\n\r\n    cardsModal(slides);\r\n\r\n    return arr;\r\n}\r\n\r\nconst setSlides = () => {\r\n    const width = document.body.clientWidth;\r\n\r\n    let quantity = 0;\r\n    width < 768 ? quantity = 1 : null;\r\n    width >= 768 && width < 1200 ? quantity = 2 : null;\r\n    width >= 1200 ? quantity = 3 : null;\r\n\r\n    return quantity;\r\n}\r\n\r\nconst setAnimate = (e) => {\r\n    e.animate([\r\n        {opacity: '0'},\r\n        {opacity: '1'}\r\n    ], 300);\r\n}\r\n\r\nexport { getRandomCards, cardsModal, renderCards, setSlides, setAnimate }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n__webpack_require__(\"./src/js/index.js\");\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/js/modules/_burger.js\");\n__webpack_require__(\"./src/js/modules/_list.js\");\n__webpack_require__(\"./src/js/modules/_modal.js\");\n__webpack_require__(\"./src/js/modules/_services.js\");\n__webpack_require__(\"./src/js/modules/_slider.js\");\nvar __webpack_exports__ = __webpack_require__(\"./src/js/modules/_utils.js\");\n",""],"names":[],"sourceRoot":""}